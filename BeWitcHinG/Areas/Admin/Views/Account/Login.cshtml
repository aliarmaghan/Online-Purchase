@using ModelServices.AdminModel
@model AdminLoginViewModel
@{
    Layout = null;
    ViewBag.Title = "Login";
}

<link href="~/Content/css/style.css" rel="stylesheet" />
<link rel="shortcut icon" href="~/favicon.ico" />

<body>
    @*<input id="hdnMessage" type="hidden" value="@TempData["ResponseMessage"]" />
    <input id="hdnValue" type="hidden" value="@TempData["ResponseValue"]" />*@
    <div class="container-scroller">
        <div class="container-fluid page-body-wrapper full-page-wrapper">
            <div class="content-wrapper d-flex align-items-center auth">
                <div class="row flex-grow">
                    <div class="col-lg-4 mx-auto">
                        <div class="auth-form-light text-left p-5" style="text-align: center;">
                            <div class="brand-logo">

                                <img src="/Content/images/client-images/shop.png" alt="logo" />
                            </div>

                            <h6 class="font-weight-light">Sign in to BeWitcHinG.</h6>
                            <h6 class="text-info">Admin LogIn</h6>
                            @*<div><span class="text-success" style="text-align:center;">@TempData["SuccessMessage"]</span></div>*@
                            @using (Html.BeginForm("Login", "Account", new { area = "Admin" }, FormMethod.Post, new { @class = "pt-3", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <span class="text-danger">@TempData["ErrorMessage"]</span>
                                <span class="text-success">@TempData["SuccessMessage"]</span>

                                <div class="form-group">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg", @placeholder = "email@com", @type = "email" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-lg", @placeholder = "Password", @type = "password" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="mt-3">
                                    <input type="submit" value="SIGN IN" class="btn btn-block btn-gradient-primary btn-lg font-weight-medium auth-form-btn" style="margin-left:210px;" />
                                </div>
                                <div class="my-2 d-flex justify-content-between align-items-center">
                                    <div class="form-check">

                                    </div>
                                    <a href="#" class="auth-link text-black">Forgot password?</a>
                                </div>

                            }
                        </div>
                    </div>
                </div>
            </div>
            <!-- content-wrapper ends -->
        </div>
        <!-- page-body-wrapper ends -->
    </div>
</body>


@section Scripts {
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>

}
@*@section Scripts
{
    <script>
        $(document).ready(function () {
            debugger;
            const message = $('#hdnMessage').val();
            const response = parseInt($('#hdnValue').val());
            let heading = '', icon = ''

            if (message != "" && message != undefined) {

                if (response == 1) {
                    heading = 'Success';
                    icon = 'success';
                }
                else {
                    heading = 'Error';
                    icon = 'error';
                }

                $.toast({
                    heading: heading,
                    text: message,
                    showHideTransition: 'slide',
                    icon: icon,
                    position: 'top-right',
                })
            }

            //alert(message);
            //alert(response);
            //console.log("ready!");
        });
    </script>
}*@
